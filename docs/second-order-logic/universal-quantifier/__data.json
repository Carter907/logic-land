{"type":"data","nodes":[{"type":"data","data":[null],"uses":{}},{"type":"data","data":[{"source":1},"## Universal Quantifiers\n\nUniversal quantifiers are quantifiers that work with sets and describe truth value when all elements in the domain of discourse evaluate the predicate to true, showing universality.\n\nYou can think of a universal quantifier in programmatic terms.\nHere is an example program in C:\n\n```c\nbool for_each_character(char *str, int len) {\n\n  // every character in str does not have the ascii code 97\n  for (int i = 0; i \u003C len; i++) {\n\n    if (str[i] == 97) {\n      return false;\n    }\n  }\n\n  return true;\n}\n```\n\nthis code equates to \n$$\\forall x:P(x), where\\ P(x)=x\\ does\\ not\\ have\\ the\\ ascii\\ value\\ 97$$\n\n- This checks every character to make sure it does not equal 97. If it does the universal statement is false.\n- You can think of the conditional as a predicate that evaluates the entire expression ( the function in this case ) to false.\n\n\n\n\n"],"uses":{"url":1}}]}
